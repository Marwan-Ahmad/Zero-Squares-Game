                    // $this->board[$x][$y] === 'Y'
                    // || $this->board[$x][$y] === 'R'
                    // || $this->board[$x][$y] === 'B'
                    // || $this->board[$x][$y] === 'C'
                    // || $this->board[$x][$y] === 'GY,R'
                    // || $this->board[$x][$y] === 'GR,Y'
                    // || $this->board[$x][$y] === 'GB,Y'
                    // || $this->board[$x][$y] === 'GB,R'
                    // || $this->board[$x][$y] === 'GY,B'
                    // || $this->board[$x][$y] === 'GR,B'
                    // || $this->board[$x][$y] === 'GR,R'
                    // || $this->board[$x][$y] === 'GB,B'
                    // || $this->board[$x][$y] === 'GY,Y'
                    // || $this->board[$x][$y] === 'GC,Y'
                    // || $this->board[$x][$y] === 'GC,R'
                    // || $this->board[$x][$y] === 'GC,B'
                    // || $this->board[$x][$y] === 'GY,C'
                    // || $this->board[$x][$y] === 'GR,C'
                    // || $this->board[$x][$y] === 'GB,C'
                    // || $this->board[$x][$y] === 'GC,C'
                    /////////////////////////////////////////////////




                    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                    public function dfs()
                    {
                    $deepcopy = new DeepCopy();
                    while ($this->stack) {
                    $this->current_state = array_pop($this->stack);
                    if ($this->current_state->isWinningState()) {
                    $this->visited[] = $deepcopy->copy($this->current_state);
                    $this->current_state->printBoard();
                    break;
                    //return $this->current_state;
                    }

                    $this->current_state->printBoard();

                    if (!$this->current_state->isBoardInArray($this->visited, $this->current_state->board)) {
                    $this->visited[] = $deepcopy->copy($this->current_state);
                    }
                    $children = $this->current_state->NextStep();
                    foreach ($children as $child) {
                    if (!$this->current_state->isBoardInArray($this->visited, $child->board)) {
                    $this->stack[] = $child;
                    }
                    }
                    }
                    return null;
                    }
                    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

                    public function dfs()
                    {
                    $deepcopy = new DeepCopy();
                    $path = []; // مسار الحل النهائي

                    while ($this->stack) {
                    $this->current_state = array_pop($this->stack);
                    $boardHash = $this->hashBoard($this->current_state->board);

                    // إضافة الحالة الحالية إلى المسار
                    $path[] = $deepcopy->copy($this->current_state);

                    // التحقق مما إذا كانت الحالة الحالية هي حالة الفوز
                    if ($this->current_state->isWinningState()) {
                    $this->visited[$boardHash] = true;

                    echo "Solution found! Steps to reach the solution:\n";
                    foreach ($path as $step) {
                    $step->printBoard();
                    echo "--------------------------\n";
                    }
                    break;
                    }
                    if (!isset($this->visited[$boardHash])) {
                    $this->visited[$boardHash] = true;
                    $children = $this->current_state->getPossibleMoves();

                    foreach ($children as $child) {
                    $childHash = $this->hashBoard($child->board);
                    if (!isset($this->visited[$childHash])) {
                    $this->stack[] = $child;
                    }
                    }
                    } else {
                    array_pop($path);
                    }
                    }
                    return null;
                    }